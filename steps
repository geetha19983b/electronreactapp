1)create-react-app electron-react-app

2)yarn add electron electron-builder wait-on concurrently --dev

3)yarn add electron-is-dev

4)Add the below electron.js file to the “public” folder.

const electron = require('electron');
const app = electron.app;
const BrowserWindow = electron.BrowserWindow;

const path = require('path');
const url = require('url');
const isDev = require('electron-is-dev');

let mainWindow;

function createWindow() {
  mainWindow = new BrowserWindow({
    width: 900, height: 680, webPreferences: {
      //nodeIntegration: true,
      preload: __dirname + '/preload.js'
    }
  });
  mainWindow.loadURL(isDev ? 'http://localhost:3000' : `file://${path.join(__dirname, '../build/index.html')}`);
  mainWindow.on('closed', () => mainWindow = null);
}

app.on('ready', createWindow);

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (mainWindow === null) {
    createWindow();
  }
});



5)Add main property to package.json

"main": "public/electron.js",

6)Add in script tag in package.json
"electron-dev": "concurrently \" yarn start\" \"wait-on http://localhost:3000 && electron .\""

7)Add a .env file with

BROWSER=none 

8)npm i node-powershell

9)Add preload.js
window.ipcRenderer = require('electron').ipcRenderer;

In react component 

window.ipcRenderer.send('exec-shellscript','DESKTOP-H34Q5DD');

 window.ipcRenderer.on('scriptResults', (evt, data) => {
     console.log(data);
      this.setState({message:data});

    });
	
	
In electron.js

ipc.on('exec-shellscript', function (event, data) {
    var spawn = require("child_process").spawn, child;
  const scriptfile = "C:\\Users\\Geetha\\codes\\electron\\electron-react-app\\public\\Get-Drives.ps1 -ComputerName";
  const compName =" " + data;
  const script = scriptfile.concat(compName);
  
  child = spawn("powershell.exe",[script]);
  child.stdout.on("data", function (data) {
    console.log("Powershell Data: " + data);
    mainWindow.webContents.send('scriptResults', 'success');
  });
  child.stderr.on("data", function (data) {
    console.log("Powershell Errors: " + data);
    mainWindow.webContents.send('scriptResults', 'error');
  });
  child.on("exit", function () {
    console.log("Powershell Script finished");
  });
  child.stdin.end(); //end input
});

